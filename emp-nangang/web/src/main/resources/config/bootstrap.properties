#server
server.compression.enabled=true
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain
server.compression.min-response-size=1024
spring.application.name=web-emp-nangang
server.tomcat.basedir=/opt/tomcat-work/${spring.application.name}

server.context-path=/${spring.application.name}
server.session.cookie.name=UISESSION

#jackson
spring.jackson.time-zone=GMT+8
spring.jackson.date-format=yyyy-MM-dd HH:mm
spring.jackson.serialization.write_dates_as_timestamps=false
spring.jackson.parser.allow-unquoted-field-names=true


#eureka
eureka.security.username=@eureka.security.username@
eureka.security.password=@eureka.security.password@
#eureka.instance.prefer-ip-address=true
eureka.instance.ip-address=@eureka.instance.ip-address@
eureka.instance.hostname=${spring.cloud.client.ipAddress}
eureka.instance.instance-id=${spring.cloud.client.ipAddress}:${server.port}:${spring.application.name}
eureka.client.service-url.defaultZone=http://${eureka.security.username}:${eureka.security.password}@${eureka.instance.ip-address}:9000/eureka/
spring.cloud.inetutils.use-only-site-local-interfaces=true
spring.cloud.inetutils.ignored-interfaces[0]=VMware.*
eureka.client.enabled=true


feign.security.username=@feign.security.username@
feign.security.password=@feign.security.password@

feign.httpclient.enabled=false
feign.okhttp.enabled=true

feign.client.config.default.loggerLevel=full
feign.compression.request.enabled=true
feign.compression.response.enabled=true
feign.compression.request.mime-types=text/xml,application/xml,application/json

feign.client.config.micro-emp-nangang.connectTimeout=5000
feign.client.config.micro-emp-nangang.readTimeout=5000

oauth2.instance.ip-address=@oauth2.instance.ip-address@
security.oauth2.resource.id=${spring.application.name}
security.oauth2.resource.user-info-uri=http://${oauth2.instance.ip-address}:9003/auth/user/me
security.oauth2.resource.prefer-token-info=false

# AOP
# Add @EnableAspectJAutoProxy.
spring.aop.auto=true
# Whether subclass-based (CGLIB) proxies are to be created (true) as opposed to standard Java interface-based proxies (false).
spring.aop.proxy-target-class=true

