server.port=8000

spring.main.banner-mode=console

#spring.devtools.restart.exclude=/static/**

#start needed
endpoints.sensitive=false
endpoints.health.sensitive=false
endpoints.metrics.sensitive=false
endpoints.info.sensitive=false

#datasource
#spring.datasource.platform=mysql
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://192.168.57.140:3306/zhyj-prod?autoReconnect=true&useSSL=false&characterEncoding=utf-8
#spring.datasource.username=root
#spring.datasource.password=root
spring.datasource.platform=oracle
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@192.168.57.140:1521:orcl
spring.datasource.username=ZHYJ
spring.datasource.password=ZHYJ


# 下面为连接池的补充设置，应用到上面所有数据源中
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,slf4j
spring.datasource.logSlowSql=true
# 配置redis
spring.redis.host=192.168.57.165